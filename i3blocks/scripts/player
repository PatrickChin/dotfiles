#! /usr/bin/bash

# pctl="playerctl"
pctl="playerctl --player=$BLOCK_INSTANCE"
plstatus=$($pctl status)

# to lowercase
BLOCK_INSTANCE="${BLOCK_INSTANCE,,}"

sleep_time="0.25s"

case $BLOCK_BUTTON in
    1)  if [ $plstatus != "Not available" ]; then
            $pctl play-pause
        elif [ -n "$RUN_CMD" ]; then
            $RUN_CMD &>/dev/null &!
        else
            $BLOCK_INSTANCE &>/dev/null &!
        fi;
        ;;
    # exits here so the status update is called by the playerctl-listener
    # ^ no longer true removed exits and lost playerctl-listener script
    2) $pctl previous ;;
    3) $pctl next ;;
    4) $pctl volume 0.1+ ;; # scroll up, increase
    5) $pctl volume 0.1- ;; # scroll down, decrease

    *) sleep_time=""
esac

if [ "$sleep_time" ]; then
    sleep $sleep_time
fi

# function get_status {

if [ ! "$plstatus" ] || [ "$plstatus" == "Not available" ]; then
    echo "$BLOCK_INSTANCE"
elif [ "$plstatus" == "Stopped" ]; then
    echo "$BLOCK_INSTANCE - Stopped"
elif [ "$plstatus" == "Paused" ] || [ "$plstatus" == "Playing" ]; then
    artist=$($pctl metadata artist)
    song=$($pctl metadata title)
    volume=$(bc <<< "$($pctl volume)*100/1")
    if [ -z "$artist" ]; then artist="?"; fi
    if [ -z "$song" ]; then song="?"; fi
    echo "$artist - $song ($plstatus $volume%)"
    echo "$artist"
else
    echo "playerctl status \"$plstatus\" is not recognised"
fi

# }

# txt=$(get_status)

# ?
# len=$(expr length "$txt")
# if (( $len < 2 )); then
#     txt="$len "+$(get_status)
#     echo $txt
# fi

# echo $txt

